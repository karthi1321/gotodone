[
  {
    "command": "git init",
    "title": "Initialize a Repository",
    "description": "The 'git init' command creates a new Git repository in the current directory.",
    "syntax": "git init",
    "example": "git init",
    "story": "Jerry starts a new project and wants to track changes using Git. He uses 'git init' to initialize a repository.",
    "type": "basic",
    "group": "repository-management",
    "game": {
      "hint": "Run 'git init' in the directory to initialize a Git repository.",
      "solution": "git init"
    }
  },
  {
    "command": "git add",
    "title": "Stage Changes",
    "description": "The 'git add' command stages changes to be included in the next commit.",
    "syntax": "git add [file/directory]",
    "example": "git add file.txt",
    "story": "Jerry modifies 'file.txt' and wants to include the changes in the next commit. He uses 'git add' to stage the file.",
    "type": "basic",
    "group": "version-control",
    "game": {
      "hint": "Use 'git add' followed by the file name to stage it for a commit.",
      "solution": "git add file.txt"
    }
  },
  {
    "command": "git commit",
    "title": "Commit Changes",
    "description": "The 'git commit' command saves staged changes to the repository.",
    "syntax": "git commit -m '[message]'",
    "example": "git commit -m 'Initial commit'",
    "story": "After staging his changes, Jerry commits them with a message describing what he did.",
    "type": "basic",
    "group": "version-control",
    "game": {
      "hint": "Use 'git commit -m' followed by a message to save changes.",
      "solution": "git commit -m 'Initial commit'"
    }
  },
  {
    "command": "git status",
    "title": "Check Repository Status",
    "description": "The 'git status' command shows the status of changes in the working directory and staging area.",
    "syntax": "git status",
    "example": "git status",
    "story": "Tom wants to check if he has any uncommitted changes. He uses 'git status' to see the current state of the repository.",
    "type": "basic",
    "group": "version-control",
    "game": {
      "hint": "Run 'git status' to see the repository's current state.",
      "solution": "git status"
    }
  },
  {
    "command": "git log",
    "title": "View Commit History",
    "description": "The 'git log' command shows the commit history of the repository.",
    "syntax": "git log",
    "example": "git log",
    "story": "Jerry wants to review the history of changes made to the project. He uses 'git log' to see the commit history.",
    "type": "basic",
    "group": "version-control",
    "game": {
      "hint": "Use 'git log' to see the commit history.",
      "solution": "git log"
    }
  },
  {
    "command": "git clone",
    "title": "Clone a Repository",
    "description": "The 'git clone' command copies a remote repository to your local machine.",
    "syntax": "git clone [repository_url]",
    "example": "git clone https://github.com/user/project.git",
    "story": "Tom wants to contribute to a project Jerry is working on. He uses 'git clone' to copy the repository to his computer.",
    "type": "basic",
    "group": "repository-management",
    "game": {
      "hint": "Use 'git clone' followed by the repository URL to copy it locally.",
      "solution": "git clone https://github.com/user/project.git"
    }
  },
  {
    "command": "git remote add",
    "title": "Add a Remote Repository",
    "description": "The 'git remote add' command connects a local repository to a remote repository.",
    "syntax": "git remote add [remote_name] [url]",
    "example": "git remote add origin https://github.com/user/project.git",
    "story": "Jerry wants to connect his local repository to a GitHub repository. He uses 'git remote add' to link them.",
    "type": "basic",
    "group": "remote-management",
    "game": {
      "hint": "Use 'git remote add' to connect a remote repository.",
      "solution": "git remote add origin https://github.com/user/project.git"
    }
  },
  {
    "command": "git pull",
    "title": "Pull Changes from Remote",
    "description": "The 'git pull' command fetches and integrates changes from a remote repository.",
    "syntax": "git pull [remote] [branch]",
    "example": "git pull origin main",
    "story": "Tom wants to get the latest updates from the remote repository. He uses 'git pull' to fetch and merge changes.",
    "type": "basic",
    "group": "remote-management",
    "game": {
      "hint": "Use 'git pull' followed by the remote name and branch to fetch updates.",
      "solution": "git pull origin main"
    }
  },
  {
    "command": "git push",
    "title": "Push Changes to Remote",
    "description": "The 'git push' command uploads local changes to a remote repository.",
    "syntax": "git push [remote] [branch]",
    "example": "git push origin main",
    "story": "Jerry wants to share his changes with the team. He uses 'git push' to upload them to the remote repository.",
    "type": "basic",
    "group": "remote-management",
    "game": {
      "hint": "Use 'git push' followed by the remote name and branch to upload changes.",
      "solution": "git push origin main"
    }
  },
  {
    "command": "git diff",
    "title": "Show Differences",
    "description": "The 'git diff' command shows differences between changes in the working directory and the staging area.",
    "syntax": "git diff [file]",
    "example": "git diff file.txt",
    "story": "Jerry wants to see what changes he made to 'file.txt' before committing. He uses 'git diff'.",
    "type": "basic",
    "group": "version-control",
    "game": {
      "hint": "Use 'git diff' to see changes made to a file.",
      "solution": "git diff file.txt"
    }
  }
]
