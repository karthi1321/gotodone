plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

// plugins {
//     id 'com.android.application'
//     id 'kotlin-android'
//     id 'dev.flutter.flutter-plugin-loader'
// }


def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
  namespace "com.gotodone"  // Namespace for your app
    compileSdk 34  // U    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.first"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.

        // minSdkVersion flutter.minSdkVersion
        //                 minSdkVersion 21

 applicationId "com.gotodone"  // Application ID
        minSdkVersion 21  // Minimum SDK version
        targetSdkVersion 34  // Explicit target SDK version


        resValue "string", "app_name", "gotodone"


        // Add 32-bit and 64-bit ABI support
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
        
        targetSdkVersion flutter.targetSdkVersion
        // versionCode flutterVersionCode.toInteger()
        // versionName flutterVersionName
        versionCode 4
    versionName "1.0.1"
    }


signingConfigs {
        release {
            def keystoreProperties = new Properties()
            def keystorePropertiesFile = rootProject.file("key.properties")

            if (keystorePropertiesFile.exists()) {
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
            }

            keyAlias keystoreProperties['keyAlias']  // Keystore alias
            keyPassword keystoreProperties['keyPassword']  // Keystore password
            storeFile file(keystoreProperties['storeFile'])  // Keystore file
            storePassword keystoreProperties['storePassword']  // Keystore store password
        }
    }

    buildTypes {
        release {
            //  signingConfig signingConfigs.release
                        minifyEnabled true
            shrinkResources true

                        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
                   
        }
    }
}

flutter {
    source '../..'
}

dependencies {}